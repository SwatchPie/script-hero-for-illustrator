{
  "jsx-test-header": {
    "prefix": "jsx-test-header",
    "scope": "javascript,javascriptreact",
    "body": [
      "/**",
      " * @file ${TM_FILEPATH}",
      " * @author SwatchPie.io",
      " * @version 1.0",
      " * @date ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      " * @license 'CC BY-NC 4.0'",
      " * ",
      " * @description",
      " * Manual tests for the `${1:utility}` module.",
      " * ",
      " * Each `test_` function models a utility's",
      " * use in a larger script.",
      " * ",
      " * Scroll to bottom to run tests.", 
      " * ",    
      " */",
    ],
  },

  "jsx-test-module": {
    "prefix": "jsx-test-module",
    "scope": "javascript,javascriptreact",
    "body": [
      "/**",
      " * @file ${TM_FILEPATH}",
      " * @author SwatchPie.io",
      " * @version 1.0",
      " * @date ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      " * @license 'CC BY-NC 4.0'",
      " * ",
      " * @description",
      " * Manual tests for the `${1:utility}` module.",
      " * ",
      " * Each `test_` function models a utility's",
      " * use in a larger script.",
      " * ",
      " * Scroll to bottom to run tests.", 
      " * ",    
      " */",
      "",
      "",
      "// @include '../utilities/${1:utility}.jsx'",
      "// @include '../utilities/docUtils.jsx'",
      "// @include '../utilities/itemUtils.jsx'",
      "// @include '../utilities/miscUtils.jsx'",
      "",
      "var test_${1:utility} = (function() {",
      "",
      "  $0",
      "",
      "  // Expose Methods",
      "  return {};",
      "",
      "})();",
      "",
      "",
      "/**",
      " * Run Tests",
      " * ",
      " *   1. Uncomment a single test.",
      " *   2. Create one of the given scenarios.",
      " *   3. Run this script with CTRL+F12.",
      " *   4. See a SUCCESS or ERROR alert as appropriate.",
      " *   5. Repeat for each scenario.", 
      " * ",
      " */",
      "",
      "/////////////////////////////////////////////////////////////",
      "",
      "/////////////////////////////////////////////////////////////",
      "",
      ""
    ],
  },

  "jsx-test-function": {
    "prefix": "jsx-test-function",
    "scope": "javascript,javascriptreact",
    "body": [
      "function test_${1:method}() {",
      "",
      "  var functionID = 'test_${1:method}';",
      "",
      "  try {",
      "",
      "    $0",
      "",
      "  } catch (e) {",
      "    e.message = 'ERROR ' + functionID + '\\n' + e.message;",
      "    alert(e.message, functionID);",
      "  }",
      "}"
    ],
  },

  "jsx-test-try-catch": {
    "prefix": "jsx-test-try-catch",
    "scope": "javascript,javascriptreact",
    "body": [
      "try {",
      "",
      "} catch (e) {",
      "  e.message = 'ERROR ' + functionID + '\\n' + e.message;",
      "  alert(e.message, functionID);",
      "}",
      ""
    ],
  },
}
