{
  "jsx-util-header": {
    "prefix": "jsx-util-header",
    "scope": "javascript,javascriptreact",
    "body": [
      "/**",
      " * @file ${TM_FILEPATH}",
      " * @author SwatchPie.io",
      " * @version 1.0",
      " * @date ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      " * @license 'CC BY-NC 4.0'",
      " * ",
      " * @description",
      " * A module with utility functions for ",
      " * working with ${2:description}.",
      " * ",
      " */",
    ]
  },

  "jsx-util-module": {
    "prefix": "jsx-util-module",
    "scope": "javascript,javascriptreact",
    "body": [
      "/**",
      " * @file ${TM_FILEPATH}",
      " * @author SwatchPie.io",
      " * @version 1.0",
      " * @date ${CURRENT_YEAR}-${CURRENT_MONTH}-${CURRENT_DATE}",
      " * @license 'CC BY-NC 4.0'",
      " * ",
      " * @description",
      " * A module with utility functions for ",
      " * working with ${2:description}.",
      " * ",
      " */",
      "",
      "",
      "// @include '../../global.jsx'",
      "// @include './docUtils.jsx'",
      "// @include './itemUtils.jsx'",
      "// @include './miscUtils.jsx'",
      "",
      "var ${TM_FILENAME_BASE} = (function() {",
      "",
      "  // Module Properties",
      "  var DEBUG = global.${TM_FILENAME_BASE/(.*)/${1:/upcase}/};",
      "",
      "  $0",
      "",
      "  // Expose Methods",
      "  return {};",
      "",
      "})();",
      "",
      ""
    ]
  },

  "jsx-util-function": {
    "prefix": "jsx-util-function",
    "scope": "javascript,javascriptreact",
    "body": [
      "/**",
      " * Description",
      " * @function ${TM_FILENAME_BASE}.${1:utilityName}",
      " */",
      "function ${1:utilityName}() {",
      "",
      "  var functionID = '${TM_FILENAME_BASE}.${1:utilityName}';",
      "",
      "  try {",
      "",
      "    $0",
      "",
      "    // Debug",
      "    var message = 'SUCCESS ' + functionID + '\\n';",
      "    if (DEBUG) alert(message, functionID);",
      "",
      "  } catch (e) {",
      "    e.message = 'ERROR ' + functionID + '\\n' + e.message;",
      "    throw e;",
      "  }",
      "}",
      "",
      ""
    ],
  },

  "jsx-util-try-catch": {
    "prefix": "jsx-util-try-catch",
    "scope": "javascript,javascriptreact",
    "body": [
      "try {",
      "",
      "  $0",
      "",
      "  // Debug",
      "  var message = 'SUCCESS ' + functionID + '\\n';",
      "  if (DEBUG) alert(message, functionID);",
      "",
      "} catch (e) {",
      "  e.message = 'ERROR ' + functionID + '\\n' + e.message;",
      "  throw e;",
      "}",
    ],
  },
}
